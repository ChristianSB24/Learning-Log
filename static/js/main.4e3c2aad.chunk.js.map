{"version":3,"sources":["logo.svg","learning_posts/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["TopicsComponent","props","textAreaRef","React","createRef","useState","newTopics","setNewTopics","className","onSubmit","event","preventDefault","newVal","current","value","tempNewTopics","unshift","text","id","ref","required","type","TopicsList","topicsInit","setTopicsInit","topics","setTopics","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","send","loadPosts","alert","map","item","index","Topic","topic","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","document","getElementById","ReactDOM","render","topicEl"],"mappings":"gNAAe,G,MAAA,IAA0B,kC,iCCIlC,SAASA,EAAgBC,GAC5B,IAAMC,EAAcC,IAAMC,YADS,EAEDC,mBAAS,IAFR,mBAE5BC,EAF4B,KAEjBC,EAFiB,KAcnC,OAAO,sBAAKC,UAAWP,EAAMO,UAAtB,UACC,qBAAKA,UAAU,cAAf,SACE,uBAAMC,SAbK,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAASV,EAAYW,QAAQC,MAC/BC,EAAa,YAAOT,GACxBS,EAAcC,QAAQ,CAClBC,KAAML,EACNM,GAAG,MAEPX,EAAaQ,GACbb,EAAYW,QAAQC,MAAM,IAIpB,UACA,0BAAUK,IAAKjB,EAAakB,UAAU,EAAMZ,UAAU,iBAGtD,wBAAQa,KAAK,SAASb,UAAU,uBAAhC,wBAGJ,cAACc,EAAD,CAAYhB,UAAWA,OAI1B,SAASgB,EAAWrB,GAAQ,IAAD,EACMI,mBAAS,IADf,mBACvBkB,EADuB,KACXC,EADW,OAEFnB,mBAAS,IAFP,mBAEvBoB,EAFuB,KAEfC,EAFe,KAoB9B,OAjBAC,qBAAU,WACN,IAAMC,EAAQ,YAAI3B,EAAMK,WAAWuB,OAAON,GACtCK,EAAME,SAAWL,EAAOK,QACxBJ,EAAUE,KAEf,CAAC3B,EAAMK,UAAWmB,EAAQF,IAE7BI,qBAAU,YCzCP,SAAmBI,GACtB,IAAMC,EAAM,IAAIC,eAIhBD,EAAIE,aADiB,OAErBF,EAAIG,KAJW,MACH,oCAIZH,EAAII,OAAS,WACXL,EAASC,EAAIK,SAAUL,EAAIM,SAE7BN,EAAIO,QAAU,SAAUC,GACtBC,QAAQC,IAAIF,GACZT,EAAS,CAAC,QAAW,4BAA6B,MAEpDC,EAAIW,ODmCFC,EAPmB,SAACP,EAAUC,GACb,MAAXA,EACFd,EAAca,GAEdQ,MAAM,0BAIT,IACIpB,EAAOqB,KAAI,SAACC,EAAMC,GACvB,OAAO,cAACC,EAAD,CAAOC,MAAOH,EAAMvC,UAAU,uCAA9B,UAA4EwC,EAA5E,kBAIN,SAASC,EAAMhD,GAAQ,IACnBiD,EAASjD,EAATiD,MACD1C,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,0BACtD,OAAO,qBAAKA,UAAWA,EAAhB,SACL,8BAAI0C,EAAMhC,GAAV,MAAiBgC,EAAMjC,UE5BdkC,MAzBf,WAEE,OACE,qBAAK3C,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAK4C,IAAKC,EAAM7C,UAAU,WAAW8C,IAAI,SACzC,sCACO,8CADP,0BAGA,8BACE,cAACtD,EAAD,MAEF,mBACEQ,UAAU,WACV+C,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCPOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAQC,SAASC,eAAe,QAClCF,GACFG,IAASC,OAAO,cAAC,EAAD,IAASJ,GAE3B,IAAMK,EAAUJ,SAASC,eAAe,gBACpCG,GACFF,IAASC,OAAO,cAACvE,EAAD,IAAqBwE,GAMvCd,M","file":"static/js/main.4e3c2aad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react'\r\n\r\nimport {loadPosts} from '../lookup'\r\n\r\nexport function TopicsComponent(props) {\r\n    const textAreaRef = React.createRef()\r\n    const [newTopics, setNewTopics] = useState([])\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        let tempNewTopics = [...newTopics]\r\n        tempNewTopics.unshift({\r\n            text: newVal,\r\n            id:123\r\n        })\r\n        setNewTopics(tempNewTopics)\r\n        textAreaRef.current.value=''\r\n    }\r\n    return <div className={props.className}>\r\n            <div className='col-12 mb-3'>\r\n              <form onSubmit={handleSubmit}>\r\n              <textarea ref={textAreaRef} required={true} className='form-control'>\r\n\r\n              </textarea>\r\n              <button type='submit' className='btn btn-primary my-3'>Topic</button>\r\n            </form>\r\n            </div>\r\n          <TopicsList newTopics={newTopics}/>\r\n    </div>\r\n}\r\n  \r\nexport function TopicsList(props) {\r\n    const [topicsInit, setTopicsInit] = useState([])\r\n    const [topics, setTopics] = useState([])\r\n    useEffect(() =>{\r\n        const final = [...props.newTopics].concat(topicsInit)\r\n        if (final.length !== topics.length) {\r\n            setTopics(final)\r\n        }\r\n    }, [props.newTopics, topics, topicsInit])\r\n\r\n    useEffect(() => {\r\n      const myCallback = (response, status) => {\r\n        if (status === 200){\r\n          setTopicsInit(response)\r\n        } else {\r\n          alert(\"There was an eror\")\r\n        }\r\n      }\r\n      loadPosts(myCallback)\r\n    }, [])\r\n    return topics.map((item, index)=>{\r\n      return <Topic topic={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })\r\n  }\r\n\r\nexport function Topic(props) {\r\n    const {topic} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    return <div className={className}>\r\n      <p>{topic.id} - {topic.text}</p>\r\n    </div>\r\n  }","export function loadPosts(callback) {\r\n    const xhr = new XMLHttpRequest() \r\n    const method = \"GET\" // \"POST\"\r\n    const url = \"http://127.0.0.1:8000/api/topics\"\r\n    const responseType = \"json\"\r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function() {\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n      console.log(e)\r\n      callback({\"message\": \"The request was an error\"}, 400)\r\n    }\r\n    xhr.send()\r\n  }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TopicsComponent} from './learning_posts'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TopicsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TopicsComponent} from './learning_posts'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst topicEl = document.getElementById(\"Learning-Log\")\nif (topicEl) {\n  ReactDOM.render(<TopicsComponent />, topicEl);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}